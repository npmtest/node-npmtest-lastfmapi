{"/home/travis/build/npmtest/node-npmtest-lastfmapi/test.js":"/* istanbul instrument in package npmtest_lastfmapi */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/lib.npmtest_lastfmapi.js":"/* istanbul instrument in package npmtest_lastfmapi */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_lastfmapi = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_lastfmapi = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-lastfmapi && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_lastfmapi */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_lastfmapi\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_lastfmapi.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_lastfmapi.rollup.js'] =\n            local.assetsDict['/assets.npmtest_lastfmapi.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_lastfmapi.__dirname + '/lib.npmtest_lastfmapi.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/index.js":"module.exports = require('./lib/lastfmapi')\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/lastfmapi.js":"var url = require('url');\nvar defaults = require('./defaults');\nvar lastfm = require('lastfm');\nvar LastFmNode = require('lastfm').LastFmNode;\n\nvar Album = require('./album');\nvar Artist = require('./artist');\nvar Auth = require('./auth');\nvar Chart = require('./chart');\nvar Geo = require('./geo');\nvar Library = require('./library');\nvar Tag = require('./tag');\nvar Track = require('./track');\nvar User = require('./user');\n\nvar LastfmAPI = module.exports = function (options) {\n\tthis.api = new LastFmNode(options);\n\tthis.sessionCredentials = null;\n\n\tthis.album = new Album(this);\n\tthis.artist = new Artist(this);\n\tthis.auth = new Auth(this);\n\tthis.chart = new Chart(this);\n\tthis.geo = new Geo(this);\n\tthis.library = new Library(this);\n\tthis.tag = new Tag(this);\n\tthis.track = new Track(this);\n\tthis.user = new User(this);\n};\n\nLastfmAPI.prototype.getAuthenticationUrl = function (params) {\n\tif (!params) params = {};\n\tvar baseUrl = 'http://www.last.fm/api/auth',\n\t    urlParts = url.parse(baseUrl);\n\n\turlParts.query = {};;\n\turlParts.query.api_key = this.api.api_key;\n\tif (params.cb) { urlParts.query.cb = params.cb; }\n\tif (params.token) { urlParts.query.token = params.token; }\n\n\treturn url.format(urlParts);\n};\n\nLastfmAPI.prototype.setSessionCredentials = function (username, key) {\n\tthis.sessionCredentials = {\n\t\t'username' : username,\n\t\t'key' : key\n\t};\n};\n\nLastfmAPI.prototype.authenticate = function (token, callback) {\n\tif (typeof callback !== 'function') { callback = function () {}; }\n\tvar self = this;\n\n\tthis.auth.getSession(token, function (err, session) {\n\t\tif (err) { return callback(err); }\n\t\tif (!session.key) { return callback(new Error('Something fishy')); }\n\n\t\tself.setSessionCredentials(session.name, session.key);\n\t\tcallback(null, self.sessionCredentials);\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/defaults.js":"var defaultOptions = function (params, callback, key) {\n\tvar options = params || {};\n\n\toptions.handlers = {\n\t\t'success' : function (rsp) {\n\t\t\tif (key) { rsp = rsp[key]; }\n\n\t\t\tif (rsp && typeof callback === 'function') {\n\t\t\t\tcallback(null, rsp);\n\t\t\t} else {\n\t\t\t\tcallback(new Error(\"Not found\"));\n\t\t\t}\n\t\t},\n\t\t'error' : function (err) {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(err);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn options;\n};\n\nexports.defaultOptions = defaultOptions;\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/album.js":"var defaults = require('./defaults');\n\nvar Album = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nAlbum.prototype.addTags = function (artist, album, tags, callback) {\n\tif (!Array.isArray(tags)) { tags = [ tags ]; }\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'album' : album,\n\t\t'tags' : tags.join(','),\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('album.addTags', options);\n};\n\nAlbum.prototype.getInfo = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'album');\n\tthis.lastfm.api.request('album.getInfo', options);\n};\n\nAlbum.prototype.getTags = function (params, callback) {\n\tif (!params.user) { params.user = this.lastfm.sessionCredentials.username; } \n\tvar options = defaults.defaultOptions(params, callback, 'tags');\n\tthis.lastfm.api.request('album.getTags', options);\n};\n\nAlbum.prototype.getTopTags = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptags');\n\tthis.lastfm.api.request('album.getTopTags', options);\n};\n\nAlbum.prototype.removeTag = function (artist, album, tag, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'album' : album,\n\t\t'tag' : tag,\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('album.removeTag', options);\n};\n\nAlbum.prototype.search = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'results');\n\tthis.lastfm.api.request('album.search', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/artist.js":"var defaults = require('./defaults');\n\nvar Artist = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nArtist.prototype.addTags = function (artist, tags, callback) {\n\tif (!Array.isArray(tags)) { tags = [ tags ]; }\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'tags' : tags.join(','),\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('artist.addTags', options);\n};\n\nArtist.prototype.getCorrection = function (artist, callback) {\n\tvar options = defaults.defaultOptions({ 'artist' : artist }, callback, 'corrections');\n\tthis.lastfm.api.request('artist.getCorrection', options);\n};\n\nArtist.prototype.getInfo = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'artist');\n\tthis.lastfm.api.request('artist.getInfo', options);\n};\n\nArtist.prototype.getSimilar = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'similarartists');\n\tthis.lastfm.api.request('artist.getSimilar', options);\n};\n\nArtist.prototype.getTags = function (params, callback) {\n\tif (!params.user) { params.user = this.lastfm.sessionCredentials.username; } \n\tvar options = defaults.defaultOptions(params, callback, 'tags');\n\tthis.lastfm.api.request('artist.getTags', options);\n};\n\nArtist.prototype.getTopAlbums = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topalbums');\n\tthis.lastfm.api.request('artist.getTopAlbums', options);\n};\n\nArtist.prototype.getTopTags = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptags');\n\tthis.lastfm.api.request('artist.getTopTags', options);\n};\n\nArtist.prototype.getTopTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptracks');\n\tthis.lastfm.api.request('artist.getTopTracks', options);\n};\n\nArtist.prototype.removeTag = function (artist, tag, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'tag' : tag,\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('artist.removeTag', options);\n};\n\nArtist.prototype.search = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'results');\n\tthis.lastfm.api.request('artist.search', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/auth.js":"var defaults = require('./defaults');\n\nvar Auth = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nAuth.prototype.getMobileSession = function (username, password, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'username' : username,\n\t\t'password' : password\n\t}, callback, 'session');\n\tthis.lastfm.api.request('auth.getMobileSession', options);\n};\n\nAuth.prototype.getSession = function (token, callback) {\n\tvar options = defaults.defaultOptions({ 'token' : token }, callback, 'session');\n\tthis.lastfm.api.request('auth.getSession', options);\n};\n\nAuth.prototype.getToken = function (callback) {\n\tvar options = defaults.defaultOptions({}, callback, 'token');\n\tthis.lastfm.api.request('auth.getToken', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/chart.js":"var defaults = require('./defaults');\n\nvar Chart = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nChart.prototype.getLovedTracks = function (params, callback) {\n\tif (typeof callback === 'undefined') { callback = params; params = null; }\n\tvar options = defaults.defaultOptions(params, callback, 'tracks');\n\tthis.lastfm.api.request('chart.getLovedTracks', options);\n};\n\nChart.prototype.getTopArtists = function (params, callback) {\n\tif (typeof callback === 'undefined') { callback = params; params = null; }\n\tvar options = defaults.defaultOptions(params, callback, 'artists');\n\tthis.lastfm.api.request('chart.getTopArtists', options);\n};\n\nChart.prototype.getTopTags = function (params, callback) {\n\tif (typeof callback === 'undefined') { callback = params; params = null; }\n\tvar options = defaults.defaultOptions(params, callback, 'tags');\n\tthis.lastfm.api.request('chart.getTopTags', options);\n};\n\nChart.prototype.getTopTracks = function (params, callback) {\n\tif (typeof callback === 'undefined') { callback = params; params = null; }\n\tvar options = defaults.defaultOptions(params, callback, 'tracks');\n\tthis.lastfm.api.request('chart.getTopTracks', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/geo.js":"var defaults = require('./defaults');\n\nvar Geo = module.exports = function (lastfm) { this.lastfm = lastfm; };\n\nGeo.prototype.getTopArtists = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topartists');\n\tthis.lastfm.api.request('geo.getTopArtists', options);\n};\n\nGeo.prototype.getTopTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'tracks');\n\tthis.lastfm.api.request('geo.getTopTracks', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/library.js":"var defaults = require('./defaults');\n\nvar Library = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nLibrary.prototype.getArtists = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'artists');\n\tthis.lastfm.api.request('library.getArtists', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/tag.js":"var defaults = require('./defaults');\n\nvar Tag = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nTag.prototype.getInfo = function (tag, lang, callback) {\n\tif (typeof callback !== 'function') { callback = lang; lang = null; }\n\tvar options = defaults.defaultOptions({\n\t\t'tag' : tag,\n\t\t'lang' : lang\n\t}, callback, 'tag');\n\tthis.lastfm.api.request('tag.getInfo', options);\n};\n\nTag.prototype.getSimilar = function (tag, callback) {\n\tvar options = defaults.defaultOptions({ 'tag' : tag }, callback, 'similartags');\n\tthis.lastfm.api.request('tag.getSimilar', options);\n};\n\nTag.prototype.getTopAlbums = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topalbums');\n\tthis.lastfm.api.request('tag.getTopAlbums', options);\n};\n\nTag.prototype.getTopArtists = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topartists');\n\tthis.lastfm.api.request('tag.getTopArtists', options);\n};\n\nTag.prototype.getTopTags = function (callback) {\n\tvar options = defaults.defaultOptions(null, callback, 'toptags');\n\tthis.lastfm.api.request('tag.getTopTags', options);\n};\n\nTag.prototype.getTopTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptracks');\n\tthis.lastfm.api.request('tag.getTopTracks', options);\n};\n\nTag.prototype.getWeeklyChartList = function (tag, callback) {\n\tvar options = defaults.defaultOptions({ 'tag' : tag }, callback, 'weeklychartlist');\n\tthis.lastfm.api.request('tag.getWeeklyChartList', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/track.js":"var defaults = require('./defaults');\n\nvar Track = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nTrack.prototype.addTags = function (artist, track, tags, callback) {\n\tif (!Array.isArray(tags)) { tags = [ tags ]; }\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'track' : track,\n\t\t'tags' : tags.join(','),\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('track.addTags', options);\n};\n\nTrack.prototype.getCorrection = function (artist, track, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'track' : track\n\t}, callback, 'corrections');\n\tthis.lastfm.api.request('track.getCorrection', options);\n};\n\nTrack.prototype.getInfo = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'track');\n\tthis.lastfm.api.request('track.getInfo', options);\n};\n\nTrack.prototype.getSimilar = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'similartracks');\n\tthis.lastfm.api.request('track.getSimilar', options);\n};\n\nTrack.prototype.getTags = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'tags');\n\tthis.lastfm.api.request('track.getTags', options);\n};\n\nTrack.prototype.getTopTags = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptags');\n\tthis.lastfm.api.request('track.getTopTags', options);\n};\n\nTrack.prototype.love = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback);\n\toptions.sk = this.lastfm.sessionCredentials.key;\n\tthis.lastfm.api.request('track.love', options);\n};\n\nTrack.prototype.removeTag = function (artist, track, tag, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'track' : track,\n\t\t'tag' : tag,\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('track.removeTag', options);\n};\n\nTrack.prototype.scrobble = function (params, callback) {\n\tvar i, len, key, newParams = {};\n\tif (Array.isArray(params)) {\n\t\tfor (i = 0, len = params.length; i < len; i++) {\n\t\t\tfor (key in params[i]) {\n\t\t\t\tnewParams[key + '[' + i + ']'] = params[i][key];\n\t\t\t}\n\t\t}\n\t\tparams = newParams;\n\t}\n\tvar options = defaults.defaultOptions(params, callback, 'scrobbles');\n\toptions.sk = this.lastfm.sessionCredentials.key;\n\tthis.lastfm.api.request('track.scrobble', options);\n};\n\nTrack.prototype.search = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'results');\n\tthis.lastfm.api.request('track.search', options);\n};\n\nTrack.prototype.unlove = function (artist, track, callback) {\n\tvar options = defaults.defaultOptions({\n\t\t'artist' : artist,\n\t\t'track' : track,\n\t\t'sk' : this.lastfm.sessionCredentials.key\n\t}, callback);\n\tthis.lastfm.api.request('track.unlove', options);\n};\n\nTrack.prototype.updateNowPlaying = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'nowplaying');\n\toptions.sk = this.lastfm.sessionCredentials.key;\n\tthis.lastfm.api.request('track.updateNowPlaying', options);\n};\n","/home/travis/build/npmtest/node-npmtest-lastfmapi/node_modules/lastfmapi/lib/user.js":"var defaults = require('./defaults');\n\nvar User = module.exports = function (lastfm) {\n\tthis.lastfm = lastfm;\n};\n\nUser.prototype.getArtistTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'artisttracks');\n\tthis.lastfm.api.request('user.getArtistTracks', options);\n};\n\nUser.prototype.getFriends = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'friends');\n\tthis.lastfm.api.request('user.getFriends', options);\n};\n\nUser.prototype.getInfo = function (user, callback) {\n\tif (typeof callback !== 'function') { callback = user; user = null; }\n\tvar params = (user) ? { 'user' : user } : null;\n\tvar options = defaults.defaultOptions(params, callback, 'user');\n\tif (!params) { options.sk = this.lastfm.sessionCredentials.key; }\n\tthis.lastfm.api.request('user.getInfo', options);\n};\n\nUser.prototype.getLovedTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'lovedtracks');\n\tthis.lastfm.api.request('user.getLovedTracks', options);\n};\n\nUser.prototype.getPersonalTags = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'taggings');\n\tthis.lastfm.api.request('user.getPersonalTags', options);\n};\n\nUser.prototype.getRecentTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'recenttracks');\n\tthis.lastfm.api.request('user.getRecentTracks', options);\n};\n\nUser.prototype.getTopAlbums = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topalbums');\n\tthis.lastfm.api.request('user.getTopAlbums', options);\n};\n\nUser.prototype.getTopArtists = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'topartists');\n\tthis.lastfm.api.request('user.getTopArtists', options);\n};\n\nUser.prototype.getTopTags = function (user, limit, callback) {\n\tif (typeof callback !== 'function') { callback = limit; limit = null; }\n\tvar options = defaults.defaultOptions({\n\t\t'user' : user,\n\t\t'limit' : limit\n\t}, callback, 'toptags');\n\tthis.lastfm.api.request('user.getTopTags', options);\n};\n\nUser.prototype.getTopTracks = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'toptracks');\n\tthis.lastfm.api.request('user.getTopTracks', options);\n};\n\nUser.prototype.getWeeklyAlbumChart = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'weeklyalbumchart');\n\tthis.lastfm.api.request('user.getWeeklyAlbumChart', options);\n};\n\nUser.prototype.getWeeklyArtistChart = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'weeklyartistchart');\n\tthis.lastfm.api.request('user.getWeeklyArtistChart', options);\n};\n\nUser.prototype.getWeeklyChartList = function (user, callback) {\n\tvar options = defaults.defaultOptions({ 'user' : user }, callback, 'weeklychartlist');\n\tthis.lastfm.api.request('user.getWeeklyChartList', options);\n};\n\nUser.prototype.getWeeklyTrackChart = function (params, callback) {\n\tvar options = defaults.defaultOptions(params, callback, 'weeklytrackchart');\n\tthis.lastfm.api.request('user.getWeeklyTrackChart', options);\n};\n"}